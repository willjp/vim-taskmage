Before (delete window):
  " delete the window
  try
    let bufwin = bufwinnr(taskmage#searchbuffer#name())
    exec printf('%s wincmd c', bufwin)
  catch
  endtry

  " clear the post-open job-queue betwen tests
  call taskmage#searchbuffer#clear_postcmds()


# ========
# exists()
# ========
Execute (win_exists() false before creation):
  AssertEqual taskmage#searchbuffer#win_exists(),  0

Execute (exists() true after creation):
  call taskmage#searchbuffer#open()
  AssertEqual taskmage#searchbuffer#win_exists(),  1

Execute (exists() false after close):
  call taskmage#searchbuffer#open()
  call taskmage#searchbuffer#close()
  AssertEqual taskmage#searchbuffer#win_exists(),  0


# ==============
# focus_window()
# ==============

Execute (focus from other window):
  call taskmage#searchbuffer#open()
  vs new
  call taskmage#searchbuffer#focus_window()
  AssertEqual taskmage#searchbuffer#name(), bufname('%')

Execute (focus does nothing when window does not exist):
  let start_winnr = bufwinnr(bufname('%'))
  call taskmage#searchbuffer#focus_window()
  let end_winnr = bufwinnr(bufname('%'))
  AssertEqual start_winnr, end_winnr

Execute (focus does nothing when searchbuffer already focused):
  call taskmage#searchbuffer#open()
  AssertEqual taskmage#searchbuffer#name(), bufname('%')


# =======
# clear()
# =======

Execute (clears buffer):
  call taskmage#searchbuffer#open()
  call setline(1, ['a', 'b', 'c'])
  call taskmage#searchbuffer#clear()
  AssertEqual '', getline(1)

Execute (restores non-searchbuffer focus):
  call taskmage#searchbuffer#open()
  vs new
  call taskmage#searchbuffer#clear()
  AssertEqual 'new', bufname('%')

Execute (keeps searchbuffer focus):
  call taskmage#searchbuffer#open()
  call taskmage#searchbuffer#clear()
  AssertEqual taskmage#searchbuffer#name(), bufname('%')


# ==============
# set contents()
# ==============

Execute (creates window):
  call taskmage#searchbuffer#set_contents(['a', 'b', 'c'])
  Assert bufwinnr(taskmage#searchbuffer#name()) >= 0

Execute (restores focus):
  e new
  call taskmage#searchbuffer#set_contents([])
  AssertEqual 'new', bufname('%')

Execute (clears existing contents):
  call taskmage#searchbuffer#open()
  call setline(1, ['1', '2', 'c'])
  call taskmage#searchbuffer#set_contents(['a', 'b', 'c'])
  AssertEqual ['a', 'b', 'c'], getline(1, 3)

# =============
# open_search()
# =============

Execute (opens file):
  call taskmage#searchbuffer#open()
  let filepath = fnamemodify('tests/resources/example.mtask', ':p')
  call setline(1, printf('||%s|B2DA77994F614106A79AF52EA9DDFAE4|(2019-01-01 12:00)|* task B-2', filepath))
  call taskmage#searchbuffer#open_searchresult()
  AssertEqual filepath, expand('%:p')

" NOTE: I cannot make this test pass.
Execute (opens line):
  " NOTE: when buffer is read, 
  call taskmage#searchbuffer#open()
  let filepath = fnamemodify('tests/resources/example.mtask', ':p')
  call setline(1, printf('||%s|B2DA77994F614106A79AF52EA9DDFAE4|(2019-01-01 12:00)|* task B-2', filepath))
  call taskmage#searchbuffer#open_searchresult()

  " assert file is loaded
  AssertEqual '    *{*B2DA77994F614106A79AF52EA9DDFAE4*} task B-2', getline(4)

  " assert line was changed to 4
  AssertEqual 4, line('.')
